---
- hosts: rhel7-base
  become: true
  pre_tasks:
    - name: Updating System Packages Before Ansible Run
      yum:
        name: "*"
        state: latest
    - name: Set timezone to Europe/London
      community.general.timezone:
        name: Europe/London

  roles:
    - epel
    - ch_collections.base.pip
    - ch_collections.base.os_package_control
    - ch_collections.base.rhel7_cis
    - ch_collections.base.clamav
    - cloudwatch-agent
    - ch_collections.base.cloudwatch_agent_helper
    - ch_collections.base.auditd
    - ch_collections.security_banner.banner
    - core_dumps
    - ptrace
    - umask
    - session_timeout
    - sudo
    - ssh
    - ipv6
    - nfs
    - postfix
    - journald
    - rsyslog
    - disable_mounting
    - password_policy
    - motd

  tasks:
    - name: update iscsi config setting
      lineinfile:
        path: /etc/iscsi/iscsid.conf
        regexp: "^node.session.timeo.replacement_timeout = 120"
        line: "node.session.timeo.replacement_timeout = 5"
        backrefs: yes

    - name: Run multipath config tool to enable multipath and disable user friendly names
      command: mpathconf --enable --with_multipathd y --user_friendly_names n
      args:
        creates: /etc/multipath.conf

    - name: Make sure aws ssm agent is enabled
      service:
        name: amazon-ssm-agent
        state: stopped
        enabled: yes

    - name: Create persistent SELinux boolean policies
      ansible.posix.seboolean:
        name: "{{ item }}"
        state: yes
        persistent: yes
      loop: "{{ selinux_policies }}"

    - name: service chronyd
      service:
        name: chronyd
        state: started
        enabled: yes

    - name: Restrict Kernel log access
      block:
        - name: Copy kernel hardening file
          ansible.builtin.copy:
            src: 10-kernel-hardening.conf
            dest: /etc/sysctl.d/10-kernel-hardening.conf
            owner: root
            group: root
            mode: "0600"

    - name: Update Kernel Parameters
      command: sysctl -p
    
    - name: Reload SSH after SSH configuration is updated
      ansible.builtin.systemd:
        name: sshd
        state: reloaded

    ### Level 1 CIS Scan ###

    - name: Level 1 CIS - Set datetime variable
      set_fact:
        datetime: "{{ lookup('pipe', 'date +%Y%m%d_%H%M%S') }}"

    - name: Level 1 CIS - Scan
      command: >
        oscap xccdf eval
        --profile xccdf_org.ssgproject.content_profile_cis_server_l1
        --results ~/OpenScap_Results_{{ datetime }}.xml
        /usr/share/xml/scap/ssg/content/ssg-rhel7-ds.xml
      register: oscap_scan
      failed_when: oscap_scan.rc == 1

    - name: Level 1 CIS - Generate Report
      command: >
        oscap xccdf generate report
        --output ~/OpenScap_Report_{{ datetime }}.html
        ~/OpenScap_Results_{{ datetime }}.xml
      when: oscap_scan is succeeded
      register: oscap_report

    - name: Level 1 CIS - Extract Score
      shell: >
        sed -n 's/.*<score[^>]*>\([0-9]\+\.[0-9]\+\)<\/score>.*/\1/p' ~/OpenScap_Results_{{ datetime }}.xml
        | xargs printf "%.2f\n"
      when: oscap_report is succeeded
      register: cis_compliance_score

    - name: Level 1 CIS - Display Score and Report Location
      debug:
        msg:
          - "Level 1 CIS Compliance Score: {{ cis_compliance_score.stdout }}%"
          - "Full report: lynx ~/OpenScap_Report_{{ datetime }}.html"

    ## Run Lynis security scan ##

    - name: Clone git rep
      ansible.builtin.git:
        repo: "https://github.com/CISOfy/lynis.git"
        dest: $HOME/lynis
        clone: true

    - name: confirm lynis folder
      find:
        paths: $HOME
        patterns: "lynis*"
        recurse: true
        file_type: directory
      register: found_directories

    - debug:
        msg: "{{ [item.path] }}"
      with_items: "{{ found_directories.files }}"

    - name: Run scan and output to file
      shell: ./lynis audit system > "$(hostname -s)_$(date +%d-%m-%Y).report"
      args:
        chdir: $HOME/lynis

    - name: Print out report
      shell: cat "$(hostname -s)_$(date +%d-%m-%Y).report"
      args:
        chdir: $HOME/lynis
      register: lynis_report

    - debug:
        msg: "{{ [item] }} "
      with_items: "{{ lynis_report.stdout }}"

    - name: Remove lynis folder
      file:
        path: $HOME/lynis
        state: absent

